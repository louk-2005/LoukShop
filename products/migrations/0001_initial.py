# Generated by Django 5.1.6 on 2025-02-23 07:10

import autoslug.fields
import ckeditor_uploader.fields
import django.core.validators
import django.db.models.deletion
import mptt.fields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Brand",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "brand_name",
                    models.CharField(help_text="write your brand name", max_length=20),
                ),
                (
                    "brand_name_en",
                    models.CharField(
                        help_text="write your brand name", max_length=20, null=True
                    ),
                ),
                (
                    "brand_name_fa",
                    models.CharField(
                        help_text="write your brand name", max_length=20, null=True
                    ),
                ),
            ],
            options={
                "ordering": ["brand_name"],
            },
        ),
        migrations.CreateModel(
            name="Coupon",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("code", models.CharField(default="", max_length=10)),
                (
                    "discount_percent",
                    models.IntegerField(
                        default=0,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(100),
                        ],
                    ),
                ),
                ("valid_from", models.DateTimeField()),
                ("valid_to", models.DateTimeField()),
                ("is_active", models.BooleanField(default=True)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="OrderAddress",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "country",
                    models.CharField(help_text="name of country", max_length=50),
                ),
                (
                    "country_en",
                    models.CharField(
                        help_text="name of country", max_length=50, null=True
                    ),
                ),
                (
                    "country_fa",
                    models.CharField(
                        help_text="name of country", max_length=50, null=True
                    ),
                ),
                ("city", models.CharField(help_text="name of city", max_length=50)),
                (
                    "city_en",
                    models.CharField(
                        help_text="name of city", max_length=50, null=True
                    ),
                ),
                (
                    "city_fa",
                    models.CharField(
                        help_text="name of city", max_length=50, null=True
                    ),
                ),
                ("addressCity", models.TextField(help_text="Your address in city")),
                (
                    "addressCity_en",
                    models.TextField(help_text="Your address in city", null=True),
                ),
                (
                    "addressCity_fa",
                    models.TextField(help_text="Your address in city", null=True),
                ),
                ("mobile_number", models.CharField(max_length=11)),
                ("home_number", models.CharField(max_length=11)),
            ],
        ),
        migrations.CreateModel(
            name="Cart",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "discount_amount",
                    models.DecimalField(decimal_places=2, default=0, max_digits=10),
                ),
                ("coupon_code", models.CharField(default="", max_length=10)),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="carts",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        help_text="write your title", max_length=100, unique=True
                    ),
                ),
                (
                    "title_en",
                    models.CharField(
                        help_text="write your title",
                        max_length=100,
                        null=True,
                        unique=True,
                    ),
                ),
                (
                    "title_fa",
                    models.CharField(
                        help_text="write your title",
                        max_length=100,
                        null=True,
                        unique=True,
                    ),
                ),
                (
                    "slug",
                    autoslug.fields.AutoSlugField(
                        editable=False, populate_from="title", unique=True
                    ),
                ),
                ("lft", models.PositiveIntegerField(editable=False)),
                ("rght", models.PositiveIntegerField(editable=False)),
                ("tree_id", models.PositiveIntegerField(db_index=True, editable=False)),
                ("level", models.PositiveIntegerField(editable=False)),
                (
                    "parent",
                    mptt.fields.TreeForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="children",
                        to="products.category",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Order",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("order_date", models.DateTimeField(auto_now_add=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("canceled", "Canceled"),
                            ("delivered", "Delivered"),
                            ("sent", "Sent"),
                            ("registered", "Registered"),
                            ("processing", "Processing"),
                        ],
                        default="processing",
                        max_length=20,
                    ),
                ),
                ("total_price", models.DecimalField(decimal_places=2, max_digits=10)),
                ("coupon", models.CharField(blank=True, max_length=100, null=True)),
                (
                    "payment_status",
                    models.CharField(
                        choices=[
                            ("pending", "Pending"),
                            ("canceled", "Canceled"),
                            ("processing", "Processing"),
                        ],
                        default="processing",
                        max_length=20,
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "address",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="products.orderaddress",
                    ),
                ),
            ],
            options={
                "ordering": ["-order_date"],
            },
        ),
        migrations.CreateModel(
            name="Product",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                (
                    "title",
                    models.CharField(help_text="write your title", max_length=100),
                ),
                (
                    "title_en",
                    models.CharField(
                        help_text="write your title", max_length=100, null=True
                    ),
                ),
                (
                    "title_fa",
                    models.CharField(
                        help_text="write your title", max_length=100, null=True
                    ),
                ),
                (
                    "slug",
                    autoslug.fields.AutoSlugField(
                        editable=False,
                        populate_from="title",
                        unique_with=("created_at", "id"),
                    ),
                ),
                ("description", ckeditor_uploader.fields.RichTextUploadingField()),
                (
                    "description_en",
                    ckeditor_uploader.fields.RichTextUploadingField(null=True),
                ),
                (
                    "description_fa",
                    ckeditor_uploader.fields.RichTextUploadingField(null=True),
                ),
                ("price", models.DecimalField(decimal_places=2, max_digits=10)),
                ("is_active", models.BooleanField(default=True)),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="products",
                        to="products.category",
                    ),
                ),
            ],
            options={
                "ordering": ["title"],
            },
        ),
        migrations.CreateModel(
            name="ProductVariant",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "additional_price",
                    models.DecimalField(decimal_places=2, max_digits=10),
                ),
                (
                    "product",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="variations",
                        to="products.product",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="OrderItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("quantity", models.PositiveIntegerField(default=1)),
                ("final_price", models.DecimalField(decimal_places=2, max_digits=10)),
                (
                    "order",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="items",
                        to="products.order",
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="products.product",
                    ),
                ),
                (
                    "product_variant",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="products.productvariant",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="CartItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "quantity",
                    models.PositiveIntegerField(
                        default=0, help_text="The quantity of item"
                    ),
                ),
                (
                    "cart",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="items",
                        to="products.cart",
                    ),
                ),
                (
                    "product",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="products.product",
                    ),
                ),
                (
                    "product_variant",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="products.productvariant",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Variation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "color",
                    models.CharField(help_text="color of product", max_length=100),
                ),
                (
                    "color_en",
                    models.CharField(
                        help_text="color of product", max_length=100, null=True
                    ),
                ),
                (
                    "color_fa",
                    models.CharField(
                        help_text="color of product", max_length=100, null=True
                    ),
                ),
                ("size", models.CharField(help_text="size of product", max_length=100)),
                (
                    "size_en",
                    models.CharField(
                        help_text="size of product", max_length=100, null=True
                    ),
                ),
                (
                    "size_fa",
                    models.CharField(
                        help_text="size of product", max_length=100, null=True
                    ),
                ),
                (
                    "brands",
                    models.ManyToManyField(
                        related_name="variations", to="products.brand"
                    ),
                ),
                (
                    "brands_en",
                    models.ManyToManyField(
                        null=True, related_name="variations", to="products.brand"
                    ),
                ),
                (
                    "brands_fa",
                    models.ManyToManyField(
                        null=True, related_name="variations", to="products.brand"
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="productvariant",
            name="variation",
            field=models.ManyToManyField(
                related_name="Vproducts", to="products.variation"
            ),
        ),
    ]
